version: '3.8'
services:
  server:
    build:
      context: ./
      dockerfile: Dockerfile
    labels:
      co.elastic.logs/enabled: true
      co.elastic.logs/json.keys_under_root: true
      co.elastic.logs/json.overwrite_keys: true
      co.elastic.logs/json.add_error_key: true
      co.elastic.logs/json.expand_keys: true
    ports:
    - "8080:8080"
  mysql:
    image: mysql:8.0
    volumes:
      - product-mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: products
    ports:
      - "3306:3306"
  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
  filebeat:
    labels:
      co.elastic.logs/enabled: false
    user: root
    image: docker.elastic.co/beats/filebeat:7.14.0
    command: filebeat -e -strict.perms=false
    volumes:
      - ./docker/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
  elasticsearch:
    labels:
      co.elastic.logs/enabled: false
    environment:
      - discovery.type=single-node
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    healthcheck:
      test: [ "CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health" ]
      interval: 3s
      timeout: 3s
      retries: 80
    ports:
      - "9200:9200"
  kibana:
    labels:
      co.elastic.logs/enabled: false
    image: docker.elastic.co/kibana/kibana:7.14.0
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-s", "-f", "http://localhost:5601/api/status" ]
      interval: 3s
      timeout: 3s
      retries: 80
    ports:
      - "5601:5601"
volumes:
  product-mysql-data: